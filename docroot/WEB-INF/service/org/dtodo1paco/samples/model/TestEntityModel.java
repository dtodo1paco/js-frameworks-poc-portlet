/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package org.dtodo1paco.samples.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.trash.TrashHandler;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.TrashedModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.trash.model.TrashEntry;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the TestEntity service. Represents a row in the &quot;TEST_TestEntity&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link org.dtodo1paco.samples.model.impl.TestEntityModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link org.dtodo1paco.samples.model.impl.TestEntityImpl}.
 * </p>
 *
 * @author dtodo1paco
 * @see TestEntity
 * @see org.dtodo1paco.samples.model.impl.TestEntityImpl
 * @see org.dtodo1paco.samples.model.impl.TestEntityModelImpl
 * @generated
 */
public interface TestEntityModel extends BaseModel<TestEntity>, TrashedModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a TestEntity model instance should use the {@link TestEntity} interface instead.
	 */

	/**
	 * Returns the primary key of this TestEntity.
	 *
	 * @return the primary key of this TestEntity
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this TestEntity.
	 *
	 * @param primaryKey the primary key of this TestEntity
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the item ID of this TestEntity.
	 *
	 * @return the item ID of this TestEntity
	 */
	public long getItemId();

	/**
	 * Sets the item ID of this TestEntity.
	 *
	 * @param itemId the item ID of this TestEntity
	 */
	public void setItemId(long itemId);

	/**
	 * Returns the item key of this TestEntity.
	 *
	 * @return the item key of this TestEntity
	 */
	@AutoEscape
	public String getItemKey();

	/**
	 * Sets the item key of this TestEntity.
	 *
	 * @param itemKey the item key of this TestEntity
	 */
	public void setItemKey(String itemKey);

	/**
	 * Returns the item company ID of this TestEntity.
	 *
	 * @return the item company ID of this TestEntity
	 */
	public long getItemCompanyId();

	/**
	 * Sets the item company ID of this TestEntity.
	 *
	 * @param itemCompanyId the item company ID of this TestEntity
	 */
	public void setItemCompanyId(long itemCompanyId);

	/**
	 * Returns the item group ID of this TestEntity.
	 *
	 * @return the item group ID of this TestEntity
	 */
	public long getItemGroupId();

	/**
	 * Sets the item group ID of this TestEntity.
	 *
	 * @param itemGroupId the item group ID of this TestEntity
	 */
	public void setItemGroupId(long itemGroupId);

	/**
	 * Returns the item creator user ID of this TestEntity.
	 *
	 * @return the item creator user ID of this TestEntity
	 */
	public long getItemCreatorUserId();

	/**
	 * Sets the item creator user ID of this TestEntity.
	 *
	 * @param itemCreatorUserId the item creator user ID of this TestEntity
	 */
	public void setItemCreatorUserId(long itemCreatorUserId);

	/**
	 * Returns the item creator user uuid of this TestEntity.
	 *
	 * @return the item creator user uuid of this TestEntity
	 * @throws SystemException if a system exception occurred
	 */
	public String getItemCreatorUserUuid() throws SystemException;

	/**
	 * Sets the item creator user uuid of this TestEntity.
	 *
	 * @param itemCreatorUserUuid the item creator user uuid of this TestEntity
	 */
	public void setItemCreatorUserUuid(String itemCreatorUserUuid);

	/**
	 * Returns the item create date of this TestEntity.
	 *
	 * @return the item create date of this TestEntity
	 */
	public Date getItemCreateDate();

	/**
	 * Sets the item create date of this TestEntity.
	 *
	 * @param itemCreateDate the item create date of this TestEntity
	 */
	public void setItemCreateDate(Date itemCreateDate);

	/**
	 * Returns the item last modified date of this TestEntity.
	 *
	 * @return the item last modified date of this TestEntity
	 */
	public Date getItemLastModifiedDate();

	/**
	 * Sets the item last modified date of this TestEntity.
	 *
	 * @param itemLastModifiedDate the item last modified date of this TestEntity
	 */
	public void setItemLastModifiedDate(Date itemLastModifiedDate);

	/**
	 * Returns the item status of this TestEntity.
	 *
	 * @return the item status of this TestEntity
	 */
	@AutoEscape
	public String getItemStatus();

	/**
	 * Sets the item status of this TestEntity.
	 *
	 * @param itemStatus the item status of this TestEntity
	 */
	public void setItemStatus(String itemStatus);

	/**
	 * Returns the test string field of this TestEntity.
	 *
	 * @return the test string field of this TestEntity
	 */
	@AutoEscape
	public String getTestStringField();

	/**
	 * Sets the test string field of this TestEntity.
	 *
	 * @param TestStringField the test string field of this TestEntity
	 */
	public void setTestStringField(String TestStringField);

	/**
	 * Returns the status of this TestEntity.
	 *
	 * @return the status of this TestEntity
	 */
	@Override
	public int getStatus();

	/**
	 * Returns the trash entry created when this TestEntity was moved to the Recycle Bin. The trash entry may belong to one of the ancestors of this TestEntity.
	 *
	 * @return the trash entry created when this TestEntity was moved to the Recycle Bin
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public TrashEntry getTrashEntry() throws PortalException, SystemException;

	/**
	 * Returns the class primary key of the trash entry for this TestEntity.
	 *
	 * @return the class primary key of the trash entry for this TestEntity
	 */
	@Override
	public long getTrashEntryClassPK();

	/**
	 * Returns the trash handler for this TestEntity.
	 *
	 * @return the trash handler for this TestEntity
	 */
	@Override
	public TrashHandler getTrashHandler();

	/**
	 * Returns <code>true</code> if this TestEntity is in the Recycle Bin.
	 *
	 * @return <code>true</code> if this TestEntity is in the Recycle Bin; <code>false</code> otherwise
	 */
	@Override
	public boolean isInTrash();

	/**
	 * Returns <code>true</code> if the parent of this TestEntity is in the Recycle Bin.
	 *
	 * @return <code>true</code> if the parent of this TestEntity is in the Recycle Bin; <code>false</code> otherwise
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public boolean isInTrashContainer();

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(TestEntity testEntity);

	@Override
	public int hashCode();

	@Override
	public CacheModel<TestEntity> toCacheModel();

	@Override
	public TestEntity toEscapedModel();

	@Override
	public TestEntity toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}